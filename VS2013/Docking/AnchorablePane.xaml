<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
                    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
                    xmlns:avalonDockLayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
                    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
                    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock"
                    xmlns:avalonDockProperties="clr-namespace:AvalonDock.Properties;assembly=AvalonDock">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Colors\DockColors.xaml" />
        <ResourceDictionary Source="..\Glyphs.xaml" />
        <ResourceDictionary Source="ButtonStyles.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- Value Converters -->
    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    <avalonDockConverters:LayoutItemFromLayoutModelConverter x:Key="LayoutItemFromLayoutModelConverter"/>
    <avalonDockConverters:ActivateCommandLayoutItemFromLayoutModelConverter x:Key="ActivateCommandLayoutItemFromLayoutModelConverter"/>

    <Style TargetType="avalonDockControls:AnchorablePaneTitle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="bkgBorder"
                            Background="{StaticResource AnchorablePane_Title_BackgroundBrush}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="0,0,0,0"
                            Padding="2,2,2,2">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="3"/>
                            </Grid.ColumnDefinitions>

                            <avalonDockControls:DropDownControlArea 
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}">
                                <ContentPresenter 
                                    x:Name="Header"            
                                    Margin="2,0,6,0" VerticalAlignment="Center"
                                    TextElement.Foreground="{StaticResource AnchorablePane_Title_ForegroundBrush}"
                                    Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                    ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                    ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </avalonDockControls:DropDownControlArea>

                            <avalonDockControls:DropDownButton
                                x:Name="MenuDropDownButton"
                                BorderThickness="1"
                                BorderBrush="Transparent"
                                VerticalAlignment="Center"
                                Style="{StaticResource AvalonDock_ThemeVS2012_ToolButtonStyle}"
                                Focusable="False"
                                Grid.Column="2"
                                Foreground="{StaticResource AnchorablePane_Title_GlyphForegroundBrush}"
                                Width="15" Height="15"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=LayoutItem, RelativeSource={RelativeSource TemplatedParent}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_CxMenu_Hint}">
                                <Rectangle Width="8" Height="4">
                                    <Rectangle.Fill>
                                        <DrawingBrush Viewbox="0,0,8,4" Viewport="0,0,8,4"
                                                      TileMode="None" ViewportUnits="Absolute"
                                                      ViewboxUnits="Absolute" RenderOptions.EdgeMode="Unspecified" >
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <DrawingGroup.Children>
                                                        <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:DropDownButton}}, Path=Foreground}"
                                                                         Geometry="M 0 0 L 4 4 L 8 0 z" />
                                                    </DrawingGroup.Children>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </avalonDockControls:DropDownButton>

                            <Button x:Name="PART_AutoHidePin" 
                                Grid.Column="3" 
                                Width="15" Height="15"
                                BorderThickness="1"
                                BorderBrush="Transparent"
                                Focusable="False"
                                Foreground="{StaticResource AnchorablePane_Title_GlyphForegroundBrush}"
                                Style="{StaticResource AvalonDock_ThemeVS2012_ButtonStyle}"
                                SnapsToDevicePixels="True"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Command="{Binding Path=LayoutItem.AutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnAutoHide_Hint}"
                                    >

                                <Rectangle Width="7" Height="11">
                                    <Rectangle.Fill>
                                        <DrawingBrush Viewbox="0,0,7,11" Viewport="0,0,7,11"
                                                      TileMode="None" ViewportUnits="Absolute"
                                                      ViewboxUnits="Absolute" RenderOptions.EdgeMode="Unspecified" >
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <DrawingGroup.Children>
                                                        <GeometryDrawing Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                                                                         Geometry="M 3 11 L 3 7 L 0 7 L 0 6 L 4 6 L 4 1 L 2 1 L 2 6 L 1 6 L 1 0 L 6 0 L 6 6 L 7 6 L 7 7 L 4 7 L 4 11 z" />
                                                    </DrawingGroup.Children>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>
                            
                            <!-- Close Button -->
                            <Button x:Name="PART_ClosePin" 
                                Grid.Column="4" 
                                Background="Transparent"
                                BorderThickness="1"
                                Focusable="False"
                                Foreground="{StaticResource AnchorablePane_Title_GlyphForegroundBrush}"
                                Width="15" Height="15"
                                Style="{StaticResource AvalonDock_ThemeVS2012_ButtonStyle}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Command="{Binding Path=LayoutItem.HideCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}"
                                ToolTip="{x:Static avalonDockProperties:Resources.Anchorable_BtnClose_Hint}" >
                                
                                <Rectangle Width="10" Height="8">
                                    <Rectangle.Fill>
                                        <DrawingBrush Viewbox="0,0,10,8" Viewport="0,0,10,8" TileMode="None" ViewportUnits="Absolute" ViewboxUnits="Absolute" RenderOptions.EdgeMode="Unspecified">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <DrawingGroup.Children>
                                                        <GeometryDrawing Geometry="M 1 0 L 9 8 z">
                                                            <GeometryDrawing.Pen>
                                                                <Pen Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                                                                     Thickness="1.5" />
                                                            </GeometryDrawing.Pen>
                                                        </GeometryDrawing>
                                                        <GeometryDrawing Geometry="M 9 0 L 1 8 z">
                                                            <GeometryDrawing.Pen>
                                                                <Pen Brush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}}, Path=Foreground}"
                                                                     Thickness="1.25" />
                                                            </GeometryDrawing.Pen>
                                                        </GeometryDrawing>

                                                    </DrawingGroup.Children>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Rectangle.Fill>
                                </Rectangle>
                            </Button>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Model.IsAutoHidden, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="LayoutTransform" TargetName="PART_AutoHidePin">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        
                        <!-- Active -->
                        <DataTrigger Binding="{Binding Model.IsActive, RelativeSource={RelativeSource Mode=Self}}" Value="True">
                            <Setter Property="Background" Value="{StaticResource AnchorablePane_Title_FocusedBackgroundBrush}" TargetName="bkgBorder" />
                            <Setter Property="TextElement.Foreground" Value="{StaticResource AnchorablePane_Title_FocusedForegroundBrush}" TargetName="Header"/>

                            <Setter TargetName="MenuDropDownButton" Property="Foreground" Value="{StaticResource AnchorablePane_Title_FocusedGlyphForegroundBrush}" />
                            <Setter TargetName="PART_AutoHidePin" Property="Foreground" Value="{StaticResource AnchorablePane_Title_FocusedGlyphForegroundBrush}" />
                            <Setter TargetName="PART_ClosePin" Property="Foreground" Value="{StaticResource AnchorablePane_Title_FocusedGlyphForegroundBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_ClosePin, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="PART_ClosePin" Property="Foreground"
                                    Value="{StaticResource AnchorablePane_Title_GlyphHoverForegroundBrush}" />
                            <Setter TargetName="PART_ClosePin" Property="Background" Value="{StaticResource AnchorablePane_TitleButton_HoverBackgroundBrush}" />
                            <Setter TargetName="PART_ClosePin" Property="BorderBrush" Value="{StaticResource AnchorablePane_TitleButton_HoverBorderBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=PART_AutoHidePin, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="PART_AutoHidePin" Property="Foreground"
                                    Value="{StaticResource AnchorablePane_Title_GlyphHoverForegroundBrush}" />
                            <Setter TargetName="PART_AutoHidePin" Property="Background" Value="{StaticResource AnchorablePane_TitleButton_HoverBackgroundBrush}" />
                            <Setter TargetName="PART_AutoHidePin" Property="BorderBrush" Value="{StaticResource AnchorablePane_TitleButton_HoverBorderBrush}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding ElementName=MenuDropDownButton, Path=IsMouseOver}" Value="True">
                            <Setter TargetName="MenuDropDownButton" Property="Foreground"
                                    Value="{StaticResource AnchorablePane_Title_GlyphHoverForegroundBrush}" />
                            <Setter TargetName="MenuDropDownButton" Property="Background" Value="{StaticResource AnchorablePane_TitleButton_HoverBackgroundBrush}" />
                            <Setter TargetName="MenuDropDownButton" Property="BorderBrush" Value="{StaticResource AnchorablePane_TitleButton_HoverBorderBrush}" />
                        </DataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AnchorablePaneControlStyle-->
    <Style x:Key="VsAnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource AnchorablePaneControl_BorderBrush}" />
        <Setter Property="Foreground" Value="{Binding Model.Root.Manager.Foreground, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Background" Value="{StaticResource AnchorablePaneControl_BackgroundBrush}"/>
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <!--Following border is required to catch mouse events-->
                        <Border Background="Transparent" Grid.RowSpan="2"/>
                        <Border x:Name="ContentPanel" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                Grid.Column="0" 
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="0" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Cycle">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel x:Name="HeaderPanel" Margin="0,0,2,2" IsItemsHost="true" Grid.Row="1" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Items.Count, RelativeSource={RelativeSource Self}}" Value="1">
                            <Setter Property="Margin" Value="0" TargetName="HeaderPanel"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background" Value="{StaticResource AnchorablePaneTabItem_BackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource AnchorablePaneTabItem_BackgroundBrush}"/>
                    <Setter Property="Foreground" Value="{StaticResource AnchorablePaneTabItem_ForegroundBrush}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true" Margin="0,-1,0,0">
                                    <Border x:Name="outerBorder"
                                            BorderBrush="{StaticResource AnchorablePaneTabItem_BackgroundBrush}"
   				                            BorderThickness="1,0,1,1"
                                            CornerRadius="0" Padding="3,1,3,1"
							                Background="{TemplateBinding Background}" >

                                    <ContentPresenter 
								            x:Name="Content" 
								            ContentSource="Header" 
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter TargetName="outerBorder" Property="BorderBrush" Value="{StaticResource AnchorablePaneTabItem_SelectedBorderBrush}" />
                                        <Setter Property="Background" Value="{StaticResource AnchorablePaneTabItem_SelectedBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{StaticResource AnchorablePaneTabItem_SelectedForegroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                        <Setter Property="Margin" Value="0,0,0,0"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="Selector.IsSelected" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{StaticResource AnchorablePaneTabItem_HoverBackgroundBrush}"/>
                                        <Setter Property="Background" Value="{StaticResource AnchorablePaneTabItem_HoverBackgroundBrush}"/>
                                        
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="BorderBrush" Value="{DynamicResource AnchorablePaneTabItem_BackgroundBrush}"/>
                                        <Setter Property="Background" Value="{DynamicResource AnchorablePaneTabItem_BackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="VsDocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="VsDocumentTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="VsAnchorableTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <!--LayoutGridResizerControl-->
    <Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}" TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DocumentPaneControlStyle-->
    <Style x:Key="VsDocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="Background" Value="Pink"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <!--Following border is required to catch mouse events-->
                        <Border Background="Transparent" Grid.RowSpan="2"/>
                        <Grid  Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DocumentPaneTabPanel x:Name="HeaderPanel"
                                                                     Grid.Column="0"
                                                                     IsItemsHost="true"
                                                                     Margin="0,0,0,0"
                                                                     Grid.Row="0"
                                                                     KeyboardNavigation.TabIndex="1" />
                            <avalonDockControls:DropDownButton
                                x:Name="MenuDropDownButton"
                                Style="{StaticResource AvalonDock_ThemeVS2012_ToolButtonStyle}"
                                Focusable="False"
                                VerticalAlignment="Center"
                                Grid.Column="1">
                                <avalonDockControls:DropDownButton.DropDownContextMenu>
                                    <avalonDockControls:ContextMenuEx
                                        ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                            <Style TargetType="{x:Type avalonDockControls:MenuItemEx}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                <Setter Property="Command" Value="{Binding Path=., Converter={StaticResource ActivateCommandLayoutItemFromLayoutModelConverter}}"/>
                                            </Style>
                                        </avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                    </avalonDockControls:ContextMenuEx>
                                </avalonDockControls:DropDownButton.DropDownContextMenu>
                                <Image Source="/AvalonDock.Themes.VS2010;component/Images/PinDocMenu.png"/>
                            </avalonDockControls:DropDownButton>
                        </Grid>
                        <Border x:Name="ContentPanel" 
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"  
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="0" 
                                Background="{StaticResource Document_BackgroundBrush}" 
                                Grid.Column="0" Margin="0" Padding="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Cycle">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="2" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Rectangle x:Name="PART_ContentTopBorder" Fill="{StaticResource DocumentTab_BorderBrush}" />

                                <ContentPresenter x:Name="PART_SelectedContentHost" Grid.Row="1"
                                              ContentSource="SelectedContent" 
                                              Margin="0"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" SourceName="MenuDropDownButton" Value="True">
                            <Setter Property="Content" TargetName="MenuDropDownButton">
                                <Setter.Value>
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/PinDocMenu_Black.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" SourceName="MenuDropDownButton" Value="True">
                            <Setter Property="Content" TargetName="MenuDropDownButton">
                                <Setter.Value>
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/PinDocMenu_Black.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="Green" />
                            <Setter TargetName="PART_ContentTopBorder" Property="Fill" Value="{StaticResource DocumentTab_ActiveBackgroundBrush}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContentTopBorder" Property="Fill" Value="{StaticResource DocumentTab_InactiveBackgroundBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DocumentTab_ForegroundBrush}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Foreground" Value="{StaticResource DocumentTab_ForegroundBrush}"/>
                    <Setter Property="Background" Value="{StaticResource DocumentTab_BackgroundBrush}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="ToolTip" Value="{Binding ToolTip}"/>
                    <Setter Property="Padding" Value="4,0,4,0"/>
                    <Setter Property="Margin" Value="0,0,0,0"/>
                    <Setter Property="Height" Value="19" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border x:Name="Bd" 
							              BorderBrush="{TemplateBinding BorderBrush}"
   				                          BorderThickness="0" 
							              Background="{StaticResource DocumentTab_BackgroundBrush}" 
							              Padding="{TemplateBinding Padding}">
                                        <ContentPresenter 
								            x:Name="Content" 
								            ContentSource="Header" 
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                            VerticalAlignment="Center"
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="true">
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor33}" />
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource DocumentTab_ActiveBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{StaticResource DocumentTab_ActiveForegroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" Value="1" />
                                        <Setter Property="Margin" Value="0"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,0,0,0"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="True"/>
                                            <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor31}" />
                                        <Setter Property="Background" Value="{StaticResource DocumentTab_ActiveBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{StaticResource DocumentTab_ActiveForegroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="False"/>
                                            <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor30}" />
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource DocumentTab_InactiveBackgroundBrush}" />
                                        <Setter Property="Foreground" Value="{StaticResource DocumentTab_ForegroundBrush}"/>
                                        <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                    </MultiDataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="Selector.IsSelected" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor14}"/>
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource DocumentTab_HoverBackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="White"/>
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor13}"/>
                                        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor9}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentControl Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--DockingManager-->
    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource VsAnchorablePaneControlStyle}"/>
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource VsDocumentTitleTemplate}"/>
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource VsAnchorableTitleTemplate}"/>
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource VsDocumentHeaderTemplate}"/>
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource VsDocumentPaneControlStyle}"/>
        <!-- <Setter Property="AnchorSideTemplate" Value="{StaticResource AvalonDock_ThemeVS2010_AnchorSideTemplate}"/>
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource AvalonDock_ThemeVS2010_AnchorGroupTemplate}"/>
        <Setter Property="AnchorTemplate" Value="{StaticResource AvalonDock_ThemeVS2010_AnchorTemplate}"/> -->
        <!--
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource VsAnchorableHeaderTemplate}"/>
        <
        
        <Setter Property="AnchorableContextMenu" Value="{StaticResource VsAnchorableContextMenu}"/>
        <Setter Property="DocumentContextMenu" Value="{StaticResource VsDocumentContextMenu}"/>-->
        <!--<Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource AvalonDock_ThemeVS2010_DocumentHeaderTemplate}"/>-->
        <!--<Setter Property="IconContentTemplate" Value="{StaticResource VsIconContentTemplate}"/>-->
        <Setter Property="GridSplitterWidth" Value="4"/>
        <Setter Property="GridSplitterHeight" Value="4"/>
    </Style>
</ResourceDictionary>